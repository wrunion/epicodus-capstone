{"version":3,"sources":["components/ResultDisplay.js","constants/CONSTANTS.js","components/SearchForm.js","components/App.js","index.js"],"names":["ResultDisplay","props","term","location","resultsToDisplay","results","filter","e","length","className","map","organizationname","description","phone","url","address1","c","SearchForm","filterResultsFromProps","filteredResults","undefined","setState","handleInputChange","target","checked","id","handleLocationInputChange","handleFormSubmit","preventDefault","resultsShowing","formSubmitted","state","formShowing","bind","onSubmit","this","type","name","required","onChange","Component","App","componentDidMount","a","axios","method","response","data","console","log","React","ReactDOM","render","document","getElementById"],"mappings":"sRAmDeA,MAjDf,SAAuBC,GAAQ,IAErBC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,SAGRC,EAH8BH,EAAZI,QAGSC,QAAO,SAAAC,GAAC,MAAgB,MAAZA,EAAEL,IAAiC,MAAhBK,EAAEJ,MAQlE,OAAIC,EAAiBI,OAAS,EAE5B,yBAAKC,UAAU,cACb,yBAAKA,UAAU,oBACb,oDAA0BL,EAAiBI,OAA3C,cAGDJ,EAAiBM,KAAI,SAAAH,GAAC,OACrB,iCAAS,iCAAUA,EAAEI,kBAClBJ,EAAEK,YACD,yBAAKH,UAAU,yBAAyBF,EAAEK,aACxC,KACHL,EAAEM,MACD,yBAAKJ,UAAU,SAASF,EAAEM,OAAe,KAC1CN,EAAEO,IACD,yBAAKL,UAAU,OAAOF,EAAEO,KACtB,KACHP,EAAEQ,SACD,yBAAKN,UAAU,WAAWF,EAAEQ,UAC1B,UAIDX,EAAiBI,OAAS,GAEjC,yBAAKC,UAAU,cAAf,wBACwBL,EAAiBI,OADzC,0HAGE,mEAAgD,4DAI3C,MC/CAQ,EAOC,gCAPDA,EAeI,4BAfJA,EAgBK,iBC6JHC,E,kDAxKb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAcRiB,uBAAyB,WAAM,IAIvBC,EAFc,EAAKlB,MAAjBI,QAEwBC,QAAO,SAAAC,GAAC,MAA2B,uBAAvBA,EAAEI,oBAA2CL,QAAO,SAAAC,GAAC,OAAIA,EAAEK,eAAaN,QAAO,SAAAC,GAAC,YAAgBa,IAAZb,EAAEM,YAAiCO,IAAVb,EAAEO,OAE3J,EAAKO,SAAS,CAAChB,QAASc,KArBP,EAwBnBG,kBAAoB,SAACf,GAIfA,EAAEgB,OAAOC,SACX,EAAKH,SAAS,CAACnB,KAAMK,EAAEgB,OAAOE,MA7Bf,EAiCnBC,0BAA4B,SAACnB,GACvBA,EAAEgB,OAAOC,SACX,EAAKH,SAAS,CAAClB,SAAUI,EAAEgB,OAAOE,MAnCnB,EAuCnBE,iBAAmB,SAACpB,GAClBA,EAAEqB,iBACF,EAAKV,yBACL,EAAKG,SAAS,CAACQ,gBAAgB,EAAMC,eAAe,KAxCpD,EAAKC,MAAQ,CACX7B,KAAM,GACNC,SAAU,GAEV6B,aAAa,EACbF,eAAe,EACfD,gBAAgB,GAElB,EAAKP,kBAAoB,EAAKA,kBAAkBW,KAAvB,gBACzB,EAAKP,0BAA4B,EAAKA,0BAA0BO,KAA/B,gBACjC,EAAKN,iBAAmB,EAAKA,iBAAiBM,KAAtB,gBAZP,E,qDA8CjB,OACE,yBAAKxB,UAAU,QACf,0BAAMyB,SAAUC,KAAKR,iBAAkBlB,UAAU,WAE/C,yBAAKA,UAAU,iBACb,oDACF,yBAAKA,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,OACLZ,GAAG,UACHa,UAAQ,EACRC,SAAUJ,KAAKb,oBACjB,4CAGF,yBAAKb,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,OACLZ,GAAIT,EACJuB,SAAUJ,KAAKb,oBAEf,+CAGJ,yBAAKb,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,OACLZ,GAAIT,EAEJuB,SAAUJ,KAAKb,oBACf,mDAGJ,yBAAKb,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,OACLZ,GAAG,SACHc,SAAUJ,KAAKb,oBACf,gDAGJ,yBAAKb,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,OACLZ,GAAIT,EACJuB,SAAUJ,KAAKb,oBACf,wDAjDN,IAuDE,yBAAKb,UAAU,iBACb,8CACF,yBAAKA,UAAU,SACb,yBAAKA,UAAU,+BACf,2BAAO2B,KAAK,QACVC,KAAK,WACLC,UAAQ,EACRb,GAAG,WACHc,SAAUJ,KAAKT,4BACjB,6CAGF,yBAAKjB,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,WACLZ,GAAG,YACHc,SAAUJ,KAAKT,4BACf,8CAGJ,yBAAKjB,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,WACLZ,GAAG,QACHc,SAAUJ,KAAKT,4BACf,0CAGJ,yBAAKjB,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,WACLZ,GAAG,gBACHc,SAAUJ,KAAKT,4BACf,kDAGJ,yBAAKjB,UAAU,SACb,yBAAKA,UAAU,qBACf,2BAAO2B,KAAK,QACVC,KAAK,WACLZ,GAAG,SACHc,SAAUJ,KAAKT,4BACf,4CAILS,KAAKJ,MAAMD,cAER,yBAAKrB,UAAU,cAAf,iDACA,4BAAQ2B,KAAK,SAAS3B,UAAU,wBAAhC,WAEH0B,KAAKJ,MAAMD,cACV,kBAAC,EAAD,CACE5B,KAAMiC,KAAKJ,MAAM7B,KACjBG,QAAS8B,KAAKJ,MAAM1B,QACpBF,SAAUgC,KAAKJ,MAAM5B,WACnB,U,GAnKaqC,aCkDVC,G,wDAhDb,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAMRyC,kBAPmB,sBAOC,4BAAAC,EAAA,sEACKC,IAAM,CAC3BC,OAAQ,MACR/B,IAAK,0DAHW,OACZgC,EADY,OAiBlB,EAAKzB,SAAS,CAAChB,QAASyC,EAASC,OACjCC,QAAQC,IAAI,EAAKlB,MAAM1B,SAlBL,2CALhB,EAAK0B,MAAQ,CACX1B,QAAS,IAHI,E,qDA6BjB,IAAMA,EAAU8B,KAAKJ,MAAM1B,QAE3B,OACE,yBAAKI,UAAU,oBACb,4EACA,kBAAC,EAAD,CAAYJ,QAASA,S,GAnCX6C,IAAMV,YCDxBW,IAASC,OACP,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6e321d10.chunk.js","sourcesContent":["import React from 'react'\n\nfunction ResultDisplay(props) {\n\n  const { term, location, results } = props;\n\n  /* Search through the filtered results using search term and location props  */\n  const resultsToDisplay = results.filter(e => e[term] === \"Y\" && e[location] === \"Y\");\n  \n  /* Filter in progress */\n  // const filteredResults = (keyword, location, arr) => {     \n  //   return arr.filter(e =>     \n  //                     e[location] === \"Y\" &&    \n  //                     e[keyword] === \"Y\") }\n\n  if (resultsToDisplay.length > 0) {\n  return (\n    <div className=\"ResultList\">\n      <div className=\"ui green message\">\n        <h5>Your search returned {resultsToDisplay.length} results:</h5>\n      </div>\n      {/* <p className=\"grey-text\"><em>To search again, change your selections above</em></p> */}\n      {resultsToDisplay.map(e => \n        <details><summary>{e.organizationname}</summary>\n          {e.description ? \n            <div className=\"ResultListDescription\">{e.description}</div> \n            : null}\n          {e.phone ? \n            <div className=\"phone\">{e.phone}</div> : null} \n          {e.url ?  \n            <div className=\"url\">{e.url}</div> \n            : null}\n          {e.address1 ? \n            <div className=\"address\">{e.address1}</div> \n            : null}\n        </details>)}\n    </div>\n  )\n  } else if (resultsToDisplay.length > 15) {\n    return (\n      <div className=\"ResultList\">\n        Your search returned {resultsToDisplay.length} results. \n        Would you like to answer a few questions about yourself, to help us find the results that are the best match? \n        <button>Yes, help me filter the results</button><button>No, show me all results</button>\n      </div>\n      );\n    } else {\n      return null;\n  }\n}\n\nexport default ResultDisplay;","export const c = {\n  /* query data */\n  APP_TOKEN: \"$$app_token=NDQ8EOLrXHft9YeGZ2axBbxzb\",\n  BASE_URL: \"https://data.cityofnewyork.us/resource/pqg4-dm6b.json\",\n\n  /* search phrases */\n  AGING: 'aging',\n  CHILD_CARE: 'child_care_parent_information',\n  SUPPORT_GROUPS: 'counseling_support_groups',\n  HEALTH: 'health',\n  HOUSING: 'housing',\n  HOUSING_ARRAY: ['housing', 'homelessness'],\n  LGBTQ: 'lesbian_gay_bisexual_and_or_transgender',\n  // LEGAL_AID_ARRAY: ['legal_services', 'victim_services', 'anti_discrimination_human_rights'],\n  // IMMIGRATION: 'immigration',\n  MENTAL_HEALTH: 'counseling_support_groups',\n  YOUTH_SERVICES: 'youth_services',\n  // DOMESTIC_VIOLENTCE: ['victim_services', 'domestic_violence'],\n\n  /* other filter terms */\n  GOVERNMENT_ORGANIZATION: ['other_government_organization', 'new_york_city_agency'],\n  NONPROFIT: 'nonprofit',\n\n  /* locations */\n  LOCATION_BRONX: 'bronx',\n  LOCATION_BROOKLYN: 'brooklyn',\n  LOCATION_MANHATTAN: 'manhattan',\n  LOCATION_QUEENS: 'queens',\n  LOCATION_STATEN_ISLAND: 'staten_island',\n  /* contact info */\n  NAME: 'organizationname',\n  NOURL: 'nourl',\n  PHONE: 'phone',\n  POSTCODE: 'postcode',\n  URL: 'url',\n  ADDRESS: 'address1',\n\n}","import React, { Component } from 'react'\nimport ResultDisplay from './ResultDisplay';\nimport { c } from './../constants/CONSTANTS';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '', \n      location: '',\n      // inputValues:[],\n      formShowing: true,\n      formSubmitted: false,\n      resultsShowing: false\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleLocationInputChange = this.handleLocationInputChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  filterResultsFromProps = () => {\n    /* Get results info from props */\n    const { results } = this.props;\n    /* Filter out results that have no description or contact info */\n    const filteredResults = results.filter(e => e.organizationname !== \"The Salvation Army\").filter(e => e.description).filter(e => e.phone !== undefined || e.url !== undefined);\n    /* Add that to state, to pass down to ResultDisplay */\n    this.setState({results: filteredResults});\n  }\n\n  handleInputChange = (e) => {\n    // e.target.checked\n    // ? this.setState({inputValues: [...this.state.inputValues, e.target.id]})\n    // : this.setState({inputValues: this.state.inputValues.filter(keyword => keyword !== e.target.id)})\n    if (e.target.checked) {\n      this.setState({term: e.target.id});\n    }\n  }\n\n  handleLocationInputChange = (e) => {\n    if (e.target.checked) {\n      this.setState({location: e.target.id});\n    } \n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    this.filterResultsFromProps();\n    this.setState({resultsShowing: true, formSubmitted: true});\n  }\n\n  render() {\n    return (\n      <div className=\"Form\">\n      <form onSubmit={this.handleFormSubmit} className=\"ui form\">\n        {/* START Service type container */}\n        <div className=\"inline fields\">\n          <label>I am looking for:</label>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"term\"\n            id=\"housing\"\n            required\n            onChange={this.handleInputChange} />\n          <label>Housing</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"term\"\n            id={c.CHILD_CARE}\n            onChange={this.handleInputChange}\n             />\n            <label>Child Care</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"term\"\n            id={c.YOUTH_SERVICES}\n            // displayName=\"Youth Programs\"\n            onChange={this.handleInputChange} />\n            <label>Youth Programs</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"term\"\n            id=\"health\"             \n            onChange={this.handleInputChange} />\n            <label>Health Care</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"term\"\n            id={c.MENTAL_HEALTH}             \n            onChange={this.handleInputChange} />\n            <label>Mental Health Care</label>\n          </div>\n        </div>\n        </div> {/* END Service Type container */}\n\n        {/* START Location container  */}\n        <div className=\"inline fields\">\n          <label>Located in:</label>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox grid-item\">\n          <input type=\"radio\"\n            name=\"location\"\n            required\n            id=\"brooklyn\"\n            onChange={this.handleLocationInputChange} />\n          <label>Brooklyn</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"location\"\n            id=\"manhattan\"            \n            onChange={this.handleLocationInputChange} />\n            <label>Manhattan</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"location\"\n            id=\"bronx\"           \n            onChange={this.handleLocationInputChange} />\n            <label>Bronx</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"location\"\n            id=\"staten_island\"            \n            onChange={this.handleLocationInputChange} />\n            <label>Staten Island</label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"ui radio checkbox\">\n          <input type=\"radio\"\n            name=\"location\"\n            id=\"queens\"             \n            onChange={this.handleLocationInputChange} />\n            <label>Queens</label>\n          </div>\n        </div>\n      </div>\n      {this.state.formSubmitted ?       \n          // <button type=\"submit\" className=\"ui button green mini\">Search Again</button>\n          <div className=\"ui message\">To search again, change your selections above</div>\n        : <button type=\"submit\" className=\"ui button green mini\">Search</button>}\n        </form>\n      {this.state.formSubmitted ?       \n        <ResultDisplay \n          term={this.state.term}\n          results={this.state.results}\n          location={this.state.location} />\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;","import React from 'react';\nimport axios from 'axios';\nimport SearchForm from './SearchForm';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        results: []\n      };\n    }\n  \n  componentDidMount = async () => {\n    const response = await axios({\n      method: 'get',\n      url: 'https://data.cityofnewyork.us/resource/pqg4-dm6b.json',\n      // options: {\n      //   transformRequest: [\n      //     (data, headers) => {\n      //       data = data.filter(e =>\n      //         e.organizationname !== \"The Salvation Army\").filter(e => \n      //           e.description !== undefined).filter(e => e.phone !== undefined ||\n      //         e.url !== undefined);\n      //       return data;\n      //     }\n      //   ]\n      // }\n    })\n\n    this.setState({results: response.data});\n    console.log(this.state.results);\n  }\n\n  render() {\n    const results = this.state.results;\n\n    return (\n      <div className=\"App ui container\">\n        <h1>Welcome to the NYC Women's Services Database</h1>\n        <SearchForm results={results} />\n\n        {/* {term ?\n          <ResultDisplay results={results} term={term} />\n          : null}\n\n        {results.length === 0 ? \n           <button className=\"ui button blue\" id=\"TestSearchButton\" onClick={this.onSearchClick}>Get all results</button> \n          : null} */}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);"],"sourceRoot":""}