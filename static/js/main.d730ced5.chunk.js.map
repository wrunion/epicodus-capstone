{"version":3,"sources":["components/KeywordSearch.js","components/RegexResults.js","components/Footer.js","components/App.js","index.js"],"names":["KeywordSearch","props","className","Form","onSubmit","e","preventDefault","callbackSubmissionHandler","target","term","value","Input","id","required","icon","placeholder","Button","type","RegexResults","results","filter","description","undefined","phone","url","length","resultsToDisplay","regex","test","organizationname","filterRegexResults","RegExp","sort","a","b","localeCompare","console","log","Segment","Footer","App","componentDidMount","axios","method","response","setState","data","state","handleFormSubmit","categories","location","searchCategories","searchLocation","resultsShowing","handleKeywordSubmit","searchTerm","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sUAmCeA,MA/Bf,SAAuBC,GAgBrB,OACI,yBAAKC,UAAU,4BACb,kBAACC,EAAA,EAAD,CAAMC,SAPZ,SAAsBC,GACpBA,EAAEC,iBACFL,EAAMM,0BAA0BF,EAAEG,OAAOC,KAAKC,SAMxC,+CACA,kBAACC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAQ,EACRC,KAAK,SACLC,YAAY,cANhB,IAM+B,6BAAM,6BACnC,kBAACC,EAAA,EAAD,CAAQC,KAAK,SAASf,UAAU,eAAhC,aCwFKgB,MAjHf,SAAsBjB,GAEpB,IAAMQ,EAAOR,EAAMQ,KAEbU,EAAUlB,EAAMkB,QAAQC,QAAO,SAAAf,GAAC,OAAIA,EAAEgB,eAAaD,QAAO,SAAAf,GAAC,YAAgBiB,IAAZjB,EAAEkB,YAAiCD,IAAVjB,EAAEmB,OAGhG,GAAIf,GAAQU,EAAQM,OAAS,EAAG,KAS1BC,EAJN,SAA4BC,EAAOR,GACjC,OAAOA,EAAQC,QAAO,SAAAf,GAAC,OAAIsB,EAAMC,KAAKvB,EAAEwB,mBAAqBF,EAAMC,KAAKvB,EAAEgB,gBAGnDS,CAPP,IAAIC,OAAJ,UAActB,EAAd,KAAuB,MAOcU,GAASa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEJ,iBAAiBM,cAAcD,EAAEL,qBAIlH,OAFAO,QAAQC,IAAIX,GAEoB,IAA5BA,EAAiBD,OAEjB,kBAACa,EAAA,EAAD,gCAC2B7B,EAD3B,IACiC,6BADjC,6CAOF,kBAAC6B,EAAA,EAAD,KACE,uCAAaZ,EAAiBD,OAA9B,iBAAoDhB,EAApD,MACA,yBAAKG,GAAG,WACN,4BAAI,0BAAMV,UAAU,aAAhB,6BAKR,OAAO,MCvCI,SAASqC,IACtB,OACE,yBAAKrC,UAAU,uBACb,6FAAkE,6BAAlE,yF,ICwESsC,E,kDAlEb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IAURwC,kBAXmB,sBAWC,4BAAAR,EAAA,sEACKS,IAAM,CAC3BC,OAAQ,MACRnB,IAAK,0DAHW,OACZoB,EADY,OAiBlB,EAAKC,SAAS,CAAC1B,QAASyB,EAASE,OACjCV,QAAQC,IAAI,EAAKU,MAAM5B,SAlBL,2CAXD,EAgCnB6B,iBAAmB,SAACC,EAAYC,GAC9Bd,QAAQC,IAAIY,EAAYC,GACxB,EAAKL,SAAS,CAACM,iBAAkBF,EAC/BG,eAAgBF,EAAUG,gBAAgB,KAnC3B,EAsCnBC,oBAAsB,SAACC,GACrBnB,QAAQC,IAAIkB,GACZ,EAAKV,SAAS,CAACU,WAAYA,KAtCzB,EAAKR,MAAQ,CACX5B,QAAS,GACTkC,gBAAgB,EAChBF,iBAAkB,GAClBC,eAAgB,GAChBG,WAAY,IAPC,E,qDAgDjB,OACE,yBAAKrD,UAAU,oBACb,qEACA,kBAACoC,EAAA,EAAD,KAGE,kBAAC,EAAD,CACE/B,0BAA2BiD,KAAKF,sBAClC,kBAAC,EAAD,CACE7C,KAAM+C,KAAKT,MAAMQ,WACjBpC,QAASqC,KAAKT,MAAM5B,WAExB,kBAACoB,EAAD,W,GA7DUkB,IAAMC,WCNxBC,IAASC,OACP,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d730ced5.chunk.js","sourcesContent":["import React from 'react'\nimport { Input, Button, Form } from 'semantic-ui-react';\nimport \"./App.css\";\n\nfunction KeywordSearch(props) {\n  // const { results, searchTerm } = props;\n\n  // const resultsWithDescriptions = results.filter(e => e.description);\n\n  // const lowercaseResults = results.map(e => {\n  //   return {...e, organizationname: e.organizationname.toLowerCase(), description: e.description.toLowerCase()}\n  // });\n\n\n  // const searchResults = (term, arr) => arr.filter(e => e.description.includes([term]) || e.organzationname.includes([term]));\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.callbackSubmissionHandler(e.target.term.value)\n  }\n\n  return (\n      <div className=\"KeywordSearch ui segment\">\n        <Form onSubmit={handleSubmit}>\n          <h3>Keyword Search:</h3>\n          <Input \n            id=\"term\"\n            required\n            icon='search' \n            placeholder='Search...' /> <br /><br />\n          <Button type=\"submit\" className=\"green basic\">Submit</Button>\n        </Form>\n      </div>\n  );\n}\n\nexport default KeywordSearch;\n\n/* \nMore specialized search options: \n\nconst healthCareResults = filteredResults.filter(e => e.description.includes(\"health\"));\n\nconst mentalHealthCareResults = filteredResults.filter(e => e.description.includes(\"mental health\"));\n\n*/","import React from 'react';\nimport { Segment } from 'semantic-ui-react';\n// import { DISPLAY } from '../constants/CONSTANTS';\n\nfunction RegexResults(props) {\n  /* Term from the search form, passed in via App */\n  const term = props.term;\n  /* Results = an array of all social services in NYC, fetched and passed in via App. Filter for description, phone, and url properties */\n  const results = props.results.filter(e => e.description).filter(e => e.phone !== undefined || e.url !== undefined);\n\n  /* If there's data to work with */\n  if (term && results.length > 0) {\n\n  const regexTerm = new RegExp(`${term}*`, \"gi\");\n\n  /* Search the names and descriptions of each organization to see if it includes the search term */\n  function filterRegexResults(regex, results) {\n    return results.filter(e => regex.test(e.organizationname) || regex.test(e.description));\n  }\n\n  const resultsToDisplay = filterRegexResults(regexTerm, results).sort((a, b) => a.organizationname.localeCompare(b.organizationname));\n\n  console.log(resultsToDisplay);\n\n  if (resultsToDisplay.length === 0) {\n    return (\n      <Segment>\n        There are 0 results for {term}.<br />\n        Please check your spelling and try again.\n      </Segment>\n    )\n  } \n  return (\n    <Segment>\n      <h3>Showing {resultsToDisplay.length} results for \"{term}\":</h3>\n      <div id=\"results\">\n        <em><span className=\"grey-text\">(Results will go here)</span></em>\n      </div>\n    </Segment>\n  )\n  } else {\n    return null;\n  }\n}\n//   if (props) {\n//   const { term, location, results } = props;\n\n//   // const formattedKeywords = keywords.map(e => DISPLAY[e]);\n//   const formattedLocation = DISPLAY[location];\n//   const formattedTerm = DISPLAY[term];\n//   /* START HERE */\n//   /* TO DO: figure out how to display the keywords by converting them into display-worthy versions */\n//   // let resultsToDisplay\n//   // if (term === \"food\") {\n//   //   const foodResults = \"x\";\n\n//   // } else {\n//   const filterResults = (term, location, arr) => {     \n//     return arr.filter(e =>     \n//                       e[location] === \"Y\" &&    \n//                       e[term] === \"Y\") }\n  \n//   const resultsToDisplay = filterResults(term, location, results).sort((a, b) => a.organizationname.localeCompare(b.organizationname));\n\n//   if (resultsToDisplay.length > 0) {\n//   return (\n//     <div className=\"ResultList\">\n//       {/* <div className=\"ui message\">\n//         <h4>Showing {resultsToDisplay.length} Results for: {formattedKeywords.map(e => \n//                 <span><em> {e} | </em></span>\n//               )} <span className=\"grey-text\">{formattedLocation} </span></h4>\n//       </div> */}\n//       <div className=\"ui message\">\n//         <h4>Showing {resultsToDisplay.length} results for <em>{formattedTerm}</em> in <em>{formattedLocation}</em></h4>\n//       </div>\n//       {resultsToDisplay.map(e => \n//         <details><summary><span className=\"Summary\">{e.organizationname}</span></summary>\n//         <div className=\"ResultListDetails\">\n//           {/* <div className=\"categories\">\n//             {formattedKeywords.map(e => \n//               <span>âœ“ {e} </span>\n//             )}\n//           </div> */}\n//           <div className=\"ResultListDescription\">\n//             {e.description.split(\" \").length < 115 ? \n//             `${e.description}`\n//             : <details><summary><em>Click for full description</em></summary>\n//               {e.description}\n//             </details>\n//           }</div> \n            \n//           {e.phone ? \n//             <div className=\"phone\"><span className=\"bold-text\">Phone:</span> {e.phone}</div> : null} \n//           {e.url ?  \n//             <div className=\"url\"><span className=\"bold-text\">Website:</span> {e.url}</div> \n//             : null}\n//           {e.address1 ? \n//             <div className=\"address\"><span className=\"bold-text\">Address:</span> {e.address1}</div> \n//             : null}\n//           <hr /></div>\n//         </details>)}\n//     </div>\n//   )\n//   } else if (resultsToDisplay.length > 15) {\n//     return (\n//       <div className=\"ResultList\">\n//         Your search returned {resultsToDisplay.length} results. \n//         Would you like to answer a few questions about yourself, to help us find the results that are the best match? \n//         <button>Yes, help me filter the results</button><button>No, show me all results</button>\n//       </div>\n//       );\n//     } else {\n//       return null;\n//     }\n//   }\n// }\n\nexport default RegexResults;","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <div className=\"Footer ui container\">\n      <em>Disclaimer: This is a student project for demo purposes only. <br />\n      For up-to-date information, please call the New York resource hotline line at * 211.</em>\n    </div>\n  )\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { Segment } from 'semantic-ui-react';\n/* SAVE THIS */\n// import DropdownSearch from './DropdownSearch';\nimport KeywordSearch from './KeywordSearch';\nimport RegexResults from './RegexResults';\nimport Footer from './Footer';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        results: [],\n        resultsShowing: false,\n        searchCategories: [],\n        searchLocation: '',\n        searchTerm: ''\n      };\n    }\n  \n  componentDidMount = async () => {\n    const response = await axios({\n      method: 'get',\n      url: 'https://data.cityofnewyork.us/resource/pqg4-dm6b.json',\n      // options: {\n      //   transformRequest: [\n      //     (data, headers) => {\n      //       data = data.filter(e =>\n      //         e.organizationname !== \"The Salvation Army\").filter(e => \n      //           e.description !== undefined).filter(e => e.phone !== undefined ||\n      //         e.url !== undefined);\n      //       return data;\n      //     }\n      //   ]\n      // }\n    })\n\n    this.setState({results: response.data});\n    console.log(this.state.results);\n  }\n\n  handleFormSubmit = (categories, location) => {\n    console.log(categories, location);\n    this.setState({searchCategories: categories,\n      searchLocation: location, resultsShowing: true})\n  }\n\n  handleKeywordSubmit = (searchTerm) => {\n    console.log(searchTerm);\n    this.setState({searchTerm: searchTerm});\n  }\n\n  render() {\n    // const results = this.state.results;\n    // const keywords = this.state.searchCategories;\n    // const location = this.state.location;\n\n    return (\n      <div className=\"App ui container\">\n        <h1>Welcome to NYC Social Service Finder*</h1>\n        <Segment>\n          {/* SAVE THIS */}\n          {/* <DropdownSearch onSubmitCallback={this.handleFormSubmit}/> */}\n          <KeywordSearch \n            callbackSubmissionHandler={this.handleKeywordSubmit} />\n          <RegexResults \n            term={this.state.searchTerm}\n            results={this.state.results} />\n        </Segment>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);"],"sourceRoot":""}